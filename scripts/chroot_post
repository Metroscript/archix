#!/bin/sh
. "$HOME"/archix/scripts/vars

#password :wheel perms
if [ "$DOAS" = true ];then
    sed -i "s/nopass/persist/" /etc/doas.conf;else
    sed -i -e "s/%wheel ALL=(ALL:ALL) NOPASSWD: ALL/# %wheel ALL=(ALL:ALL) NOPASSWD: ALL/" -i -e "s/# %wheel ALL=(ALL:ALL) ALL/%wheel ALL=(ALL:ALL) ALL/" /etc/sudoers
fi

#Allows freshclam to work (may only be needed for systemd)
touch /var/log/clamav/freshclam.log
chmod 600 /var/log/clamav/freshclam.log
chown clamav /var/log/clamav/freshclam.log
freshclam

#Hardened /tmp
if [ "$ARTIX" = true ] && [ "$INIT" = dinit ];then
    cp /usr/lib/dinit.d/tmpfs /etc/dinit.d
    sed -i 's|command.*|command   = /bin/mount -t tmpfs tmpfs /tmp -o defaults,nodev,nosuid|' /etc/dinit.d/tmpfs;else
    printf "tmpfs /tmp tmpfs defaults,nodev,nosuid 0 0\n" >> /etc/fstab
fi

#Firewall settings
ufw default deny incoming
ufw default allow outgoing
ufw enable

# Regenerate the UKIs incase mkinitcpio has been updated and remove initramfs files from /boot
rm /boot/initramfs* #Remove initramfs generated during pacstrap

if [ -f /usr/share/libalpm/hooks/90-mkinitcpio-install.hook.disabled ];then
    mv /usr/share/libalpm/hooks/90-mkinitcpio-install.hook.disabled /usr/share/libalpm/hooks/90-mkinitcpio-install.hook
fi
if [ -f /usr/share/libalpm/hooks/60-mkinitcpio-remove.hook.disabled ];then
    mv /usr/share/libalpm/hooks/60-mkinitcpio-remove.hook.disabled /usr/share/libalpm/hooks/60-mkinitcpio-remove.hook
fi
mkinitcpio -P

#Init Services
if [ "$VM" = true ];then
    QEMU=" libvirtd virtlogd"
fi
if [ "$LAPTOP" = true ];then
    TLP=" tlp"
fi

SERVICES="NetworkManager ufw chronyd sddm $CRON apparmor auditd rngd$QEMU$TLP"

if [ "$ARTIX" != true ];then
    SERVICES="cups clamav-daemon clamav-freshclam pkgfile-update.timer paccache.timer $SERVICES"
    systemctl enable $SERVICES
else
    SERVICES="cupsd clamd freshclam $SERVICES"
    for SERVICE in $SERVICES;do
        if [ "$INIT" = dinit ];then
            INITSTART="ln -s /etc/dinit.d/$SERVICE /etc/dinit.d/boot.d/"
        elif [ "$INIT" = runit ];then
            INITSTART="ln -s /etc/runit/sv/$SERVICE /run/runit/service/"
        elif [ "$INIT" = openrc ];then
            INITSTART="rc-update add $SERVICE default"
        elif [ "$INIT" = s6 ];then
            INITSTART="touch /etc/s6/adminsv/default/contents.d/$SERVICE"
        fi
        $INITSTART
    done
fi

if [ "$INIT" = s6 ];then
    s6-db-reload
fi

if [ "$VM" = true ];then
    virtqemud &
    virtnetworkd &
    virsh net-autostart default
fi
